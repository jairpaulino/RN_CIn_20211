for (param in 1:length(values)){#param = 1
  model = keras_model_sequential()
  model %>%
    layer_dense(units = 10, 
                activation = "sigmoid", 
                activity_regularizer = regularizer_l2(l = values[param]),
                #regularizer_l2(l = values[param]),
                input_shape = 2) %>% 
    layer_dense(units = 1, activation = "linear")
  
  model %>% compile(loss = "mean_squared_error",
                    optimizer  = "sgd",
                    metrics = 'mean_absolute_error')
  set.seed(123)
  history = model %>% 
    fit(X_trainData, 
        y_trainData,
        batch_size = 1, 
        verbose = T,
        epochs = 100,
        rate = 0.05,
        validation_split = 0.2,
        #
    ) #plot(history)
# 
#   jpeg(filename = paste("Results/", valuesNames[param], 
#                        ".jpeg", sep = ""),
#       width = 600, height = 400)
#   p = plot(history)
#   dev.off()

  plot(history)
  ggsave(filename = paste("Results/", valuesNames[param], 
                          ".jpeg", sep = ""))
  
  result_train = model %>% evaluate(X_trainData[1:800,], y_trainData[1:800])
  all_train[param] = result_train[1]
  result_test = model %>% evaluate(X_trainData[801:1000,], y_trainData[801:1000])
  all_test[param] = result_test[1]
}

